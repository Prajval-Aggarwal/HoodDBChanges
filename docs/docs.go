// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin": {
            "get": {
                "description": "Retrieve the list of all admins",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Get Admins list",
                "responses": {
                    "200": {
                        "description": "Admin Details fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/admin/arena": {
            "put": {
                "description": "Update a Arena by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Arena"
                ],
                "summary": "Update a Arena",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update request payload",
                        "name": "updateReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateArenaReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Arena updated successful",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "404": {
                        "description": "Arena not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new arena to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Arena"
                ],
                "summary": "Add a new arena",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Arena request payload",
                        "name": "garageReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddArenaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Arena added successful",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a Arena by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Arena"
                ],
                "summary": "Delete a Arena",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Arena request payload",
                        "name": "ArenaReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeletArenaReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Arena deleted successful",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "404": {
                        "description": "Arena not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/admin/garage/add": {
            "post": {
                "description": "Add a new garage to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Garage"
                ],
                "summary": "Add a new garage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Garage request payload",
                        "name": "garageReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddGarageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Garage added successful",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/admin/garage/delete": {
            "delete": {
                "description": "Delete a garage by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Garage"
                ],
                "summary": "Delete a garage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Garage request payload",
                        "name": "garageReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeletGarageReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Garage deleted successful",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "404": {
                        "description": "Garage not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/admin/garage/update": {
            "put": {
                "description": "Update a garage by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Garage"
                ],
                "summary": "Update a garage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update request payload",
                        "name": "updateReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateGarageReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Garage updated successful",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "404": {
                        "description": "Garage not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/arena/add-car": {
            "post": {
                "description": "Add a car to the player's slot in a specific arena",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Arena"
                ],
                "summary": "Add a car to arena",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Player Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Add car to slot request payload",
                        "name": "addCarReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddCarArenaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car added to slot successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "400": {
                        "description": "Bad request. Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "404": {
                        "description": "Car or player not found",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/arena/cars": {
            "get": {
                "description": "Get the list of cars that can enter the arena",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Arena"
                ],
                "summary": "List of cars that can play",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Player Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car added to slot successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "400": {
                        "description": "Bad request. Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "404": {
                        "description": "Car or player not found",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/arena/end": {
            "post": {
                "description": "Ends the current challenge and saves the data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Arena"
                ],
                "summary": "End Challenge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Player Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "End Challenge Request",
                        "name": "challengereq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.EndChallengeReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "401": {
                        "description": "Unauthorised",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/arena/enter": {
            "post": {
                "description": "Enter arena",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Arena"
                ],
                "summary": "Enter the arena",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Player Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Id of the arena",
                        "name": "addCarReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GetArenaReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "401": {
                        "description": "Unauthorised",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/arena/get": {
            "get": {
                "description": "Retrieve the list of all Arenas",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Arena"
                ],
                "summary": "Get All Arena List",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number of records to skip (default is 0)",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum number of records to fetch (default is 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Arena list fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/arena/owner": {
            "get": {
                "description": "Get the details of arena owner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Arena"
                ],
                "summary": "Get arena owner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id of the arena",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "401": {
                        "description": "Unauthorised",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/arena/replace-car": {
            "put": {
                "description": "Add or replaces the car in the arena car slot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Arena"
                ],
                "summary": "Replace Car",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Player Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Replace car Request",
                        "name": "challengereq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ReplaceReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "401": {
                        "description": "Unauthorised",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/arena/slots/get": {
            "get": {
                "description": "Get the details of the cars kept in arena",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Arena"
                ],
                "summary": "Get arena slots details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Player Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id of the arena",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "401": {
                        "description": "Unauthorised",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/arena/types": {
            "get": {
                "description": "Retrieve the list of all arena types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Arena"
                ],
                "summary": "Get All Arena type List",
                "responses": {
                    "200": {
                        "description": "Arena type list fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/car/customise/price": {
            "get": {
                "description": "Get the price of car parts customizations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Car-Customize"
                ],
                "summary": "Get the price of car parts customizations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/car/get-all": {
            "get": {
                "description": "Retrieve the list of all car",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Car"
                ],
                "summary": "Get All Cars List",
                "responses": {
                    "200": {
                        "description": "Cars list fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/delete-account": {
            "delete": {
                "description": "Delets the account of the player",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Delete Player's account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Player Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/forgot-password": {
            "post": {
                "description": "Generates and send an email with reset password lin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Generates link",
                "parameters": [
                    {
                        "description": "Admin registered email",
                        "name": "adminEmail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ForgotPassRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/garage/rarity": {
            "get": {
                "description": "Retrieve the list of rarities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Garage"
                ],
                "summary": "Get All Rarity list",
                "responses": {
                    "200": {
                        "description": "List fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/garage/types": {
            "get": {
                "description": "Retrieve the list of all garages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Garage"
                ],
                "summary": "Get All Garage type List",
                "responses": {
                    "200": {
                        "description": "Garage type list fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/garages/get-all": {
            "get": {
                "description": "Retrieve the list of all garages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Garage"
                ],
                "summary": "Get All Garage List",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number of records to skip (default is 0)",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum number of records to fetch (default is 10)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Garage list fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/get-shop": {
            "get": {
                "description": "Retrieve a list of Shop items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shop"
                ],
                "summary": "Get things in shop",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/guest-login": {
            "post": {
                "description": "Perform guest login and generate access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Guest Login",
                "parameters": [
                    {
                        "description": "Guest Login Request",
                        "name": "guestLoginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.GuestLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/level": {
            "get": {
                "description": "Equip a car for a Level",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Player"
                ],
                "summary": "Get Level details",
                "responses": {
                    "200": {
                        "description": "Data fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Perform admin login and generate access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Admin Login",
                "parameters": [
                    {
                        "description": "Login Details",
                        "name": "loginDetails",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AdminLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/logout": {
            "delete": {
                "description": "Logs out a player",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout Player",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Player Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/player-login": {
            "post": {
                "description": "Perform user login and generate access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Player Login",
                "parameters": [
                    {
                        "description": "Login Details",
                        "name": "loginDetails",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PlayerLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/player/cars": {
            "get": {
                "description": "Get the lost of owned cars of the player",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Player"
                ],
                "summary": "Get Player Cars",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Player Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/reset-password": {
            "patch": {
                "description": "Reset password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset's the password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Reset token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Admins new password",
                        "name": "NewPassword",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdatePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/update-email": {
            "put": {
                "description": "Update the email address of a player",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Player"
                ],
                "summary": "Update Email",
                "parameters": [
                    {
                        "description": "Update Email Request",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateEmailRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email updated successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "404": {
                        "description": "Player not found",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        },
        "/update-pass": {
            "patch": {
                "description": "Updates the password of the admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Updates the password of the admin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "New password of the player",
                        "name": "newPassword",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdatePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Success"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.AddArenaRequest": {
            "type": "object",
            "properties": {
                "arenaLevel": {
                    "type": "integer"
                },
                "arenaName": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "request.AddCarArenaRequest": {
            "type": "object",
            "properties": {
                "arenaId": {
                    "type": "string"
                },
                "custId": {
                    "type": "string"
                }
            }
        },
        "request.AddGarageRequest": {
            "type": "object",
            "properties": {
                "coinsRequired": {
                    "description": "coins required to unlock the garage",
                    "type": "integer"
                },
                "garageName": {
                    "type": "string"
                },
                "garageType": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "level": {
                    "description": "level required to unlock the garage",
                    "type": "integer"
                },
                "longitude": {
                    "type": "number"
                },
                "rarity": {
                    "type": "integer"
                }
            }
        },
        "request.AdminLoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "request.DeletArenaReq": {
            "type": "object",
            "properties": {
                "arenaId": {
                    "type": "string"
                }
            }
        },
        "request.DeletGarageReq": {
            "type": "object",
            "properties": {
                "garageId": {
                    "type": "string"
                }
            }
        },
        "request.EndChallengeReq": {
            "type": "object",
            "properties": {
                "arenaId": {
                    "type": "string"
                },
                "custId": {
                    "type": "string"
                },
                "microSec": {
                    "type": "integer"
                },
                "milliSec": {
                    "type": "integer"
                },
                "playerId": {
                    "type": "string"
                },
                "raceId": {
                    "type": "string"
                },
                "seconds": {
                    "type": "integer"
                }
            }
        },
        "request.ForgotPassRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "request.GetArenaReq": {
            "type": "object",
            "properties": {
                "arenaId": {
                    "type": "string"
                }
            }
        },
        "request.GuestLoginRequest": {
            "type": "object",
            "properties": {
                "deviceId": {
                    "type": "string"
                },
                "os": {
                    "type": "integer"
                },
                "playerName": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "request.PlayerLoginRequest": {
            "type": "object",
            "properties": {
                "credential": {
                    "type": "string"
                }
            }
        },
        "request.ReplaceReq": {
            "type": "object",
            "properties": {
                "arenaId": {
                    "type": "string"
                },
                "existingCustId": {
                    "type": "string"
                },
                "newCustId": {
                    "type": "string"
                }
            }
        },
        "request.UpdateArenaReq": {
            "type": "object",
            "properties": {
                "arenaId": {
                    "type": "string"
                },
                "arenaLevel": {
                    "type": "integer"
                },
                "arenaName": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "request.UpdateEmailRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "request.UpdateGarageReq": {
            "type": "object",
            "properties": {
                "coinsRequired": {
                    "description": "coins required to unlock the garage",
                    "type": "integer"
                },
                "garageId": {
                    "type": "string"
                },
                "garageName": {
                    "type": "string"
                },
                "garageType": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "level": {
                    "description": "level required to unlock the garage",
                    "type": "integer"
                },
                "longitude": {
                    "type": "number"
                },
                "rarity": {
                    "type": "integer"
                }
            }
        },
        "request.UpdatePasswordRequest": {
            "type": "object",
            "properties": {
                "oldPassword": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "response.Success": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Gin Demo App",
	Description:      "This is a demo version of Gin app.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
